#!/bin/bash
#
# .---.                  .              .
# |                      |              |
# |--- .--. .-.  .-.  .-.|  .-. .--.--. |.-.  .-. .--.  .-.
# |    |   (.-' (.-' (   | (   )|  |  | |   )(   )|  | (.-'
# '    '     --'  --'  -' -  -' '  '   -' -'   -' '   -  --'
#
#                    Freedom in the Cloud
#
# Network functions
#
# License
# =======
#
# Copyright (C) 2014-2018 Bob Mottram <bob@freedombone.net>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# If the system is on an IPv6 network
IPV6_NETWORK='2001:470:26:307'

# Destinations used to get the local IP address of this system
# Google ipv6 DNS   2001:4860:4860::8888
# OpenDNS ipv6 DNS  2620:0:ccc::2
IPV4_ADDRESS_TEST_DESTINATION='85.214.73.63'
IPV6_ADDRESS_TEST_DESTINATION='2620:0:ccc::2'
EXTERNAL_IP_LOOKUP_URL='ifcfg.me'

# The static IP address of the system within the local network
# By default the IP address is dynamic within your LAN
LOCAL_NETWORK_STATIC_IP_ADDRESS=

# IP address of the router (gateway)
ROUTER_IP_ADDRESS="192.168.1.254"

MESH_INSTALL_DIR=/var/lib

function install_static_network {
    if [[ $(is_completed "${FUNCNAME[0]}") == "1" ]]; then
        return
    fi
    if [[ $INSTALLING_ON_BBB == "yes" ]]; then
        return
    fi
    if [ ! $LOCAL_NETWORK_STATIC_IP_ADDRESS ]; then
        return
    fi

    echo '# This file describes the network interfaces available on your system' > /etc/network/interfaces
    echo '# and how to activate them. For more information, see interfaces(5).' >> /etc/network/interfaces
    echo 'source /etc/network/interfaces.d/*' >> /etc/network/interfaces

    { echo 'auto eth0';
      echo 'iface eth0 inet static';
      echo "    address $LOCAL_NETWORK_STATIC_IP_ADDRESS";
      echo '    netmask 255.255.255.0';
      echo "    gateway $ROUTER_IP_ADDRESS"; } > /etc/network/interfaces.d/static

    mark_completed "${FUNCNAME[0]}"
}

function get_external_ipv4_address {
    nslookup . $EXTERNAL_IP_LOOKUP_URL | grep Address | tail -n 1 | awk -F ' ' '{print $2}'
}

function get_ipv4_address {
    IPv4dev=$(ip route get $IPV4_ADDRESS_TEST_DESTINATION | awk '{for(i=1;i<=NF;i++)if($i~/dev/)print $(i+1)}')
    ip -o -f inet addr show dev "$IPv4dev" | awk '{print $4}' | awk 'END {print}' | awk -F '/' '{print $1}'
}

function get_ipv6_address {
    retval=$(ip -6 route get $IPV6_ADDRESS_TEST_DESTINATION 2> /dev/null)
    echo "$retval" | awk -F " " '{ for(i=1;i<=NF;i++) if ($i == "src") print $(i+1) }'
}

function update_external_ip {
    ip_update_script=/usr/bin/externalipupdate
    { echo '#!/bin/bash';
      echo "existing_ip=\$(cat $CONFIGURATION_FILE | grep \"EXTERNAL_IPV4_ADDRESS=\" | head -n 1 | awk -F '=' '{print \$2}')'";
      echo "curr_ip=\$(nslookup . $EXTERNAL_IP_LOOKUP_URL | grep Address | tail -n 1 | awk -F ' ' '{print \$2}')";
      echo "if [[ \"\$curr_ip\" != \"\$existing_ip\" ]]; then";
      echo "  sed -i \"s|EXTERNAL_IPV4_ADDRESS=.*|EXTERNAL_IPV4_ADDRESS=\${curr_ip}|g\" $CONFIGURATION_FILE";
      echo "  echo \"\$(date)\" >> ~/${PROJECT_NAME}-external-ip-changes.txt";
      echo 'fi'; } > $ip_update_script

    cron_add_mins 10 $ip_update_script
}

# NOTE: deliberately no exit 0
