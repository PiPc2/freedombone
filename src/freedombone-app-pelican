#!/bin/bash
#
# .---.                  .              .
# |                      |              |
# |--- .--. .-.  .-.  .-.|  .-. .--.--. |.-.  .-. .--.  .-.
# |    |   (.-' (.-' (   | (   )|  |  | |   )(   )|  | (.-'
# '    '     --'  --'  -' -  -' '  '   -' -'   -' '   -  --'
#
#                    Freedom in the Cloud
#
# Static blog
#
# License
# =======
#
# Copyright (C) 2014-2016 Bob Mottram <bob@freedombone.net>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

VARIANTS=''

IN_DEFAULT_INSTALL=0

STATIC_BLOG_INSTALL_DIR=/etc/staticblog
PELICAN_THEMES_REPO="https://github.com/getpelican/pelican-themes"
PELICAN_PLUGINS_REPO="https://github.com/getpelican/pelican-plugins"
DEFAULT_BLOG_TITLE=$"Freedombone Blog"

pelican_variables=(MY_USERNAME
                   STATIC_BLOG_DOMAIN)

function configure_interactive_pelican {
    echo -n ''
}

function install_interactive_pelican {
    echo -n ''
    APP_INSTALLED=1
}

function reconfigure_pelican {
    echo -n ''
}

function upgrade_pelican {
    echo -n ''
}

function backup_local_pelican {
    echo -n ''
}

function restore_local_pelican {
    echo -n ''
}

function backup_remote_pelican {
    echo -n ''
}

function restore_remote_pelican {
    echo -n ''
}

function remove_pelican {
    if [ -d /var/www/$STATIC_BLOG_DOMAIN/htdocs ]; then
        rm -rf /var/www/$STATIC_BLOG_DOMAIN/htdocs
    fi
    pip uninstall pelican
    remove_certs $STATIC_BLOG_DOMAIN
}

function create_pelican_conf {
    STATIC_BLOG_FILE=$1

    echo '#!/usr/bin/env python' > $STATIC_BLOG_FILE
    echo '# -*- coding: utf-8 -*- #' >> $STATIC_BLOG_FILE
    echo 'from __future__ import unicode_literals' >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo "AUTHOR=u\"$MY_USERNAME\"" >> $STATIC_BLOG_FILE
    echo "SITENAME=u'$DEFAULT_BLOG_TITLE'" >> $STATIC_BLOG_FILE
    echo "SITEURL=''" >> $STATIC_BLOG_FILE
    echo "PATH='content'" >> $STATIC_BLOG_FILE
    echo 'TIMEZONE=u"Europe/London"' >> $STATIC_BLOG_FILE
    echo "DEFAULT_LANG=u'en'" >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo 'FEED_ALL_ATOM=None' >> $STATIC_BLOG_FILE
    echo 'CATEGORY_FEED_ATOM=None' >> $STATIC_BLOG_FILE
    echo 'TRANSLATION_FEED_ATOM=None' >> $STATIC_BLOG_FILE
    echo 'AUTHOR_FEED_ATOM=None' >> $STATIC_BLOG_FILE
    echo 'AUTHOR_FEED_RSS=None' >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo 'DEFAULT_PAGINATION=False' >> $STATIC_BLOG_FILE
    echo 'RELATIVE_URLS=True' >> $STATIC_BLOG_FILE
    echo "THEME='themes/nice-blog'" >> $STATIC_BLOG_FILE
}

function create_pelican_makefile {
    STATIC_BLOG_FILE=$1

    echo 'PY?=python' > $STATIC_BLOG_FILE
    echo 'PELICAN?=pelican' >> $STATIC_BLOG_FILE
    echo 'PELICANOPTS=' >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo 'BASEDIR=$(CURDIR)' >> $STATIC_BLOG_FILE
    echo 'INPUTDIR=$(BASEDIR)/content' >> $STATIC_BLOG_FILE
    echo "OUTPUTDIR=$STATIC_BLOG_PATH" >> $STATIC_BLOG_FILE
    echo 'CONFFILE=$(BASEDIR)/pelicanconf.py' >> $STATIC_BLOG_FILE
    echo 'PUBLISHCONF=$(BASEDIR)/publishconf.py' >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo 'DEBUG ?= 0' >> $STATIC_BLOG_FILE
    echo 'ifeq ($(DEBUG), 1)' >> $STATIC_BLOG_FILE
    echo -e '\tPELICANOPTS += -D' >> $STATIC_BLOG_FILE
    echo 'endif' >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo 'RELATIVE ?= 0' >> $STATIC_BLOG_FILE
    echo 'ifeq ($(RELATIVE), 1)' >> $STATIC_BLOG_FILE
    echo -e '\tPELICANOPTS += --relative-urls' >> $STATIC_BLOG_FILE
    echo 'endif' >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo 'html:' >> $STATIC_BLOG_FILE
    echo -e '\t$(PELICAN) $(INPUTDIR) -o $(OUTPUTDIR) -s $(CONFFILE) $(PELICANOPTS)' >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo 'clean:' >> $STATIC_BLOG_FILE
    echo -e '\t[ ! -d $(OUTPUTDIR) ] || rm -rf $(OUTPUTDIR)' >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo 'regenerate:' >> $STATIC_BLOG_FILE
    echo -e '\t$(PELICAN) -r $(INPUTDIR) -o $(OUTPUTDIR) -s $(CONFFILE) $(PELICANOPTS)' >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo 'serve:' >> $STATIC_BLOG_FILE
    echo 'ifdef PORT' >> $STATIC_BLOG_FILE
    echo -e '\tcd $(OUTPUTDIR) && $(PY) -m pelican.server $(PORT)' >> $STATIC_BLOG_FILE
    echo 'else' >> $STATIC_BLOG_FILE
    echo -e '\tcd $(OUTPUTDIR) && $(PY) -m pelican.server' >> $STATIC_BLOG_FILE
    echo 'endif' >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo 'serve-global:' >> $STATIC_BLOG_FILE
    echo 'ifdef SERVER' >> $STATIC_BLOG_FILE
    echo -e '\tcd $(OUTPUTDIR) && $(PY) -m pelican.server 80 $(SERVER)' >> $STATIC_BLOG_FILE
    echo 'else' >> $STATIC_BLOG_FILE
    echo -e '\tcd $(OUTPUTDIR) && $(PY) -m pelican.server 80 0.0.0.0' >> $STATIC_BLOG_FILE
    echo 'endif' >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo 'devserver:' >> $STATIC_BLOG_FILE
    echo 'ifdef PORT' >> $STATIC_BLOG_FILE
    echo -e '\t$(BASEDIR)/develop_server.sh restart $(PORT)' >> $STATIC_BLOG_FILE
    echo 'else' >> $STATIC_BLOG_FILE
    echo -e '\t$(BASEDIR)/develop_server.sh restart' >> $STATIC_BLOG_FILE
    echo 'endif' >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo 'stopserver:' >> $STATIC_BLOG_FILE
    echo -e '\t$(BASEDIR)/develop_server.sh stop' >> $STATIC_BLOG_FILE
    echo -e '\t@echo "Stopped Pelican and SimpleHTTPServer processes running in background."' >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo 'publish:' >> $STATIC_BLOG_FILE
    echo -e '\t$(PELICAN) $(INPUTDIR) -o $(OUTPUTDIR) -s $(PUBLISHCONF) $(PELICANOPTS)' >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo '.PHONY: html clean regenerate serve serve-global devserver publish' >> $STATIC_BLOG_FILE
}

function create_pelican_publish_conf {
    STATIC_BLOG_FILE=$1

    echo '#!/usr/bin/env python' > $STATIC_BLOG_FILE
    echo '# -*- coding: utf-8 -*- #' >> $STATIC_BLOG_FILE
    echo 'from __future__ import unicode_literals' >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo 'import os' >> $STATIC_BLOG_FILE
    echo 'import sys' >> $STATIC_BLOG_FILE
    echo 'sys.path.append(os.curdir)' >> $STATIC_BLOG_FILE
    echo 'from pelicanconf import *' >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo "SITEURL = ''" >> $STATIC_BLOG_FILE
    echo 'RELATIVE_URLS = True' >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo "FEED_ALL_ATOM = 'feeds/all.atom.xml'" >> $STATIC_BLOG_FILE
    echo "CATEGORY_FEED_ATOM = 'feeds/%s.atom.xml'" >> $STATIC_BLOG_FILE
    echo '' >> $STATIC_BLOG_FILE
    echo 'DELETE_OUTPUT_DIRECTORY = True' >> $STATIC_BLOG_FILE
}

function pelican_themes {
    # Clone themes separately because the themes repo sometimes has bad refs
    git clone https://github.com/KenMercusLai/BT3-Flat
    git clone https://github.com/abr4xas/Casper2Pelican
    git clone https://github.com/alexandrevicenzi/Flex
    git clone https://github.com/allenskd/Nuja
    git clone https://github.com/ir193/Responsive-Pelican
    git clone https://github.com/nairobilug/pelican-alchemy
    git clone https://github.com/livibetter-backup/apricot
    git clone https://github.com/jody-frankowski/blue-penguin
    git clone https://github.com/gregseth/pelican-bgh
    git clone https://github.com/blueicefield/pelican-blueidea
    git clone https://github.com/demianbrecht/pelican-bold
    git clone https://github.com/fly/burrito
    git clone https://github.com/yuex/pelican-iliork
    git clone https://github.com/tbunnyman/pelican-chunk
    git clone https://github.com/hdra/Pelican-Cid
    git clone https://github.com/gilsondev/pelican-clean-blog
    git clone https://github.com/porterjamesj/crowsfoot
    git clone https://github.com/22decembre/dev-random3.git
    git clone https://github.com/kura/eevee
    git clone https://github.com/talha131/pelican-elegant.git
    git clone https://github.com/callmefish/pelican-free-agent
    git clone https://github.com/jsliang/pelican-fresh
    git clone https://github.com/vaiski/genus
    git clone https://github.com/PierrePaul/html5-dopetrope
    git clone https://github.com/jvanz/pelican-hyde
    git clone https://github.com/erfaan/pelican-theme-irfan
    git clone https://github.com/slok/iris
    git clone https://github.com/badele/pelican-theme-jesuislibre
    git clone https://github.com/mothsART/pelican-lab
    git clone https://github.com/siovene/lannisport
    git clone https://github.com/lazycoder-ru/lazystrap
    git clone https://github.com/chdoig/pelican-bootstrap3-lovers
    git clone https://github.com/kplaube/maggner-pelican
    git clone https://github.com/cpaulik/martin-pelican
    git clone https://github.com/greizgh/pelican-material
    git clone https://github.com/eswarm/materialistic-pelican
    git clone https://github.com/cprieto/pelican-mediumfox
    git clone https://github.com/onuraslan/medius
    git clone https://github.com/lucachr/pelican-mg
    git clone https://github.com/BYK/pelican-neat
    git clone https://github.com/molivier/nest
    git clone https://github.com/guilherme-toti/nice-blog
    git clone https://github.com/gunchu/nikhil-theme
    git clone https://github.com/wilbur-ma/niu-x2
    git clone https://github.com/duilio/pelican-octopress-theme
    git clone https://github.com/Parbhat/pelican-blue
    git clone https://github.com/hdra/pelican-cait
    git clone https://github.com/laughk/pelican-hss
    git clone https://github.com/wrl/pelican-mockingbird
    git clone https://github.com/fle/pelican-simplegrey
    git clone https://github.com/fle/pelican-sober
    git clone https://github.com/ingwinlu/pelican-twitchy
    git clone https://github.com/badele/pelicanthemes-generator
    git clone https://github.com/jjimenezlopez/pelipress
    git clone https://github.com/xm3ron/pjport
    git clone https://github.com/kdeldycke/plumage
    git clone https://github.com/habibillah/pujangga
    git clone https://github.com/danclaudiupop/pure
    git clone https://github.com/wamonite/relapse
    git clone https://github.com/ellisonleao/pelican-semantic-ui
    git clone https://github.com/kdheepak89/pelican-smoothie
    git clone https://github.com/if1live/pelican-sora
    git clone https://github.com/redVi/storm
    git clone https://github.com/keningle/pelican-sundown
    git clone https://github.com/giulivo/pelican-svbhack
    git clone https://github.com/wting/pelican-svbtle
    git clone https://github.com/frankV/twenty-pelican-html5up
    git clone https://github.com/robulouski/voidy-bootstrap
    git clone https://github.com/samael500/w3-personal-blog
    git clone https://github.com/jarv/water-iris
    git clone https://github.com/kplaube/yapeme
}

function mesh_install_pelican {
    if [[ $VARIANT != "meshclient" && $VARIANT != "meshusb" && $VARIANT != "usb" ]]; then
        return
    fi

    chroot "$rootdir" apt-get -yq install python-pip
    chroot "$rootdir" pip install ipython
    chroot "$rootdir" pip install Markdown
    chroot "$rootdir" pip install typogrify
    chroot "$rootdir" pip install pelican

    STATIC_BLOG_INSTALL_DIR=/home/$MY_USERNAME/CreateBlog
    STATIC_BLOG_PATH=/home/$MY_USERNAME/Public/Blog

    if [ ! -d $rootdir$STATIC_BLOG_INSTALL_DIR ]; then
        mkdir -p $rootdir$STATIC_BLOG_INSTALL_DIR
    fi

    if [ ! -d $rootdir$STATIC_BLOG_PATH ]; then
        mkdir -p $rootdir$STATIC_BLOG_PATH
    fi

    if [ ! -d $rootdir$STATIC_BLOG_INSTALL_DIR/content/images ]; then
        mkdir -p $rootdir$STATIC_BLOG_INSTALL_DIR/content/images
    fi

    create_pelican_conf $rootdir$STATIC_BLOG_INSTALL_DIR/pelicanconf.py
    create_pelican_makefile $rootdir$STATIC_BLOG_INSTALL_DIR/Makefile
    create_pelican_publish_conf $rootdir$STATIC_BLOG_INSTALL_DIR/publishconf.py

    mkdir -p $rootdir$STATIC_BLOG_INSTALL_DIR/themes
    cd $rootdir$STATIC_BLOG_INSTALL_DIR/themes
    pelican_themes

    #git clone --recursive $PELICAN_PLUGINS_REPO $rootdir$STATIC_BLOG_INSTALL_DIR/plugins

    chroot "$rootdir" chown -R $MY_USERNAME:$MY_USERNAME $STATIC_BLOG_INSTALL_DIR
    chroot "$rootdir" chown -R $MY_USERNAME:$MY_USERNAME /home/$MY_USERNAME/Public
}

function install_pelican {
    if [ $INSTALLING_MESH ]; then
        mesh_install_pelican
        return
    fi

    apt-get -yq install python-pip
    pip install ipython
    pip install Markdown
    pip install typogrify
    pip install pelican

    STATIC_BLOG_INSTALL_DIR=/etc/blog
    STATIC_BLOG_PATH=/var/www/$STATIC_BLOG_DOMAIN/htdocs

    if [ ! -d $STATIC_BLOG_INSTALL_DIR ]; then
        mkdir -p $STATIC_BLOG_INSTALL_DIR
    fi

    if [ ! -d $STATIC_BLOG_PATH ]; then
        mkdir -p $STATIC_BLOG_PATH
    fi

    if [ ! -d $STATIC_BLOG_INSTALL_DIR/content ]; then
        mkdir -p $STATIC_BLOG_INSTALL_DIR/content
    fi

    create_pelican_conf $STATIC_BLOG_INSTALL_DIR/pelicanconf.py
    create_pelican_makefile $STATIC_BLOG_INSTALL_DIR/Makefile
    create_pelican_publish_conf $STATIC_BLOG_INSTALL_DIR/publishconf.py

    mkdir -p $PELICAN_THEMES_REPO $STATIC_BLOG_INSTALL_DIR/themes
    cd $PELICAN_THEMES_REPO $STATIC_BLOG_INSTALL_DIR/themes
    pelican_themes

    #git clone --recursive $PELICAN_PLUGINS_REPO $STATIC_BLOG_INSTALL_DIR/plugins

    chown -R $MY_USERNAME:$MY_USERNAME $STATIC_BLOG_INSTALL_DIR
    chown -R www-data:www-data $STATIC_BLOG_PATH
    APP_INSTALLED=1
}

# NOTE: deliberately no exit 0
