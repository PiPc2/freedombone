#!/bin/bash
#
# .---.                  .              .
# |                      |              |
# |--- .--. .-.  .-.  .-.|  .-. .--.--. |.-.  .-. .--.  .-.
# |    |   (.-' (.-' (   | (   )|  |  | |   )(   )|  | (.-'
# '    '     --'  --'  -' -  -' '  '   -' -'   -' '   -  --'
#
#                    Freedom in the Cloud
#
# Hubzilla application
#
# License
# =======
#
# Copyright (C) 2014-2018 Bob Mottram <bob@freedombone.net>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

VARIANTS='full full-vim social'

IN_DEFAULT_INSTALL=0
SHOW_ON_ABOUT=1

HUBZILLA_DOMAIN_NAME=
HUBZILLA_CODE=
HUBZILLA_ONION_PORT=8085
HUBZILLA_REPO="https://github.com/redmatrix/hubzilla.git"
HUBZILLA_COMMIT='577da0eb9eb1f90a4cf7a70cfb3582cfb49007ac'
HUBZILLA_ADDONS_REPO="https://github.com/redmatrix/hubzilla-addons.git"
HUBZILLA_ADDONS_COMMIT='be9dcd044b9326c3bd9301d7c4b375a2c2f54663'
HUBZILLA_ADMIN_PASSWORD=

hubzilla_variables=(ONION_ONLY
                    HUBZILLA_DOMAIN_NAME
                    HUBZILLA_CODE
                    DDNS_PROVIDER
                    MY_USERNAME
                    HUBZILLA_REPO
                    HUBZILLA_ADDONS_REPO)

function logging_on_hubzilla {
    echo -n ''
}

function logging_off_hubzilla {
    echo -n ''
}

function remove_user_hubzilla {
    remove_username="$1"
    ${PROJECT_NAME}-pass -u $remove_username --rmapp hubzilla
}

function add_user_hubzilla {
    if [[ $(app_is_installed hubzilla) == "0" ]]; then
        echo '0'
        return
    fi

    new_username="$1"
    new_user_password="$2"
    ${PROJECT_NAME}-pass -u $new_username -a hubzilla -p "$new_user_password"
    echo '0'
}

function hubzilla_renew_cert {
    dialog --title $"Renew SSL certificate" \
           --backtitle $"Freedombone Control Panel" \
           --yesno $"\nThis will renew a letsencrypt certificate. Select 'yes' to continue" 16 60
    sel=$?
    case $sel in
        1) return;;
        255) return;;
    esac
    HUBZILLA_DOMAIN_NAME=$(get_completion_param "hubzilla domain")
    if [ ! -d /var/www/$HUBZILLA_DOMAIN_NAME/htdocs ]; then
        dialog --title $"Renew SSL certificate" \
               --msgbox $"Hubzilla install directory not found" 6 40
        return
    fi
    ${PROJECT_NAME}-renew-cert -h $HUBZILLA_DOMAIN_NAME -p 'letsencrypt'
    if [ ! "$?" = "0" ]; then
        any_key
    else
        dialog --title $"Renew SSL certificate" \
               --msgbox $"Hubzilla certificate has been renewed" 6 40
    fi
}

function hubzilla_channel_directory_server {
    if ! grep -q "hubzilla domain" $COMPLETION_FILE; then
        dialog --title $"Hubzilla channel directory server" \
               --msgbox $"Hubzilla is not installed on this system" 6 40
        return
    fi
    HUBZILLA_DOMAIN_NAME=$(get_completion_param "hubzilla domain")
    if [ ! -d /var/www/$HUBZILLA_DOMAIN_NAME/htdocs ]; then
        dialog --title $"Hubzilla channel directory server" \
               --msgbox $"Hubzilla install directory not found" 6 40
        return
    fi

    data=$(tempfile 2>/dev/null)
    trap "rm -f $data" 0 1 2 5 15
    dialog --title $"Hubzilla channel directory server" \
           --backtitle $"Freedombone Control Panel" \
           --inputbox $"When you click on 'channel directory' this is where Hubzilla will obtain its list from" 8 60 2>$data
    sel=$?
    case $sel in
        0)
            hubzilla_domain_server=$(<$data)
            if [[ $hubzilla_domain_server != *"."* ]]; then
                return
            fi
            if [[ $hubzilla_domain_server != "https"* ]]; then
                dialog --title $"Hubzilla channel directory server" \
                       --msgbox $"Invalid domain - include the https://" 6 40
                return
            fi
            ./var/www/$HUBZILLA_DOMAIN_NAME/htdocs/util/config system directory_server $hubzilla_domain_server
            dialog --title $"Hubzilla channel directory server" \
                   --msgbox $"Domain channel directory server changed to $hubzilla_domain_server" 6 40
            ;;
    esac
}

function configure_interactive_hubzilla {
    while true
    do
        data=$(tempfile 2>/dev/null)
        trap "rm -f $data" 0 1 2 5 15
        dialog --backtitle $"Freedombone Control Panel" \
               --title $"Hubzilla" \
               --radiolist $"Choose an operation:" 13 70 4 \
               1 $"Set channel directory server" off \
               2 $"Renew SSL certificate" off \
               3 $"Back to main menu" on 2> $data
        sel=$?
        case $sel in
            1) break;;
            255) break;;
        esac
        case $(cat $data) in
            1) hubzilla_channel_directory_server;;
            2) hubzilla_renew_cert;;
            3) break;;
        esac
    done
}

function install_interactive_hubzilla {
    if [[ $ONION_ONLY != "no" ]]; then
        return
    fi

    function_check interactive_site_details
    interactive_site_details hubzilla

    APP_INSTALLED=1
}

function change_password_hubzilla {
    HUBZILLA_USERNAME="$1"
    HUBZILLA_PASSWORD="$2"
    if [ ${#HUBZILLA_PASSWORD} -lt 8 ]; then
        echo $'Hubzilla password is too short'
        return
    fi
    # TODO: This doesn't actually change the password
    #${PROJECT_NAME}-pass -u $HUBZILLA_USERNAME -a hubzilla -p "$HUBZILLA_PASSWORD"
}

function hubzilla_create_database {
    if [ -f $IMAGE_PASSWORD_FILE ]; then
        HUBZILLA_ADMIN_PASSWORD="$(printf `cat $IMAGE_PASSWORD_FILE`)"
    fi
    if [ ! $HUBZILLA_ADMIN_PASSWORD ]; then
        HUBZILLA_ADMIN_PASSWORD="$(create_password ${MINIMUM_PASSWORD_LENGTH})"
    fi
    ${PROJECT_NAME}-pass -u $MY_USERNAME -a hubzilla -p "$HUBZILLA_ADMIN_PASSWORD"
    if [ ! $HUBZILLA_ADMIN_PASSWORD ]; then
        return
    fi

    function_check create_database
    create_database hubzilla "$HUBZILLA_ADMIN_PASSWORD"
}

function reconfigure_hubzilla {
    echo -n ''
}

function upgrade_hubzilla {
    CURR_HUBZILLA_COMMIT=$(get_completion_param "hubzilla commit")
    if [[ "$CURR_HUBZILLA_COMMIT" == "$HUBZILLA_COMMIT" ]]; then
        return
    fi

    HUBZILLA_PATH=/var/www/$HUBZILLA_DOMAIN_NAME/htdocs

    function_check set_repo_commit
    set_repo_commit $HUBZILLA_PATH "hubzilla commit" "$HUBZILLA_COMMIT" $HUBZILLA_REPO
    set_repo_commit $HUBZILLA_PATH/addon "hubzilla addons commit" "$HUBZILLA_ADDONS_COMMIT" $HUBZILLA_ADDONS_REPO
    if [ -d $HUBZILLA_PATH/redmatrix-themes1 ]; then
        cd $HUBZILLA_PATH/redmatrix-themes1
        git merge --abort
        git stash
        git pull
        cp -r $HUBZILLA_PATH/redmatrix-themes1/* $HUBZILLA_PATH/view/theme/
        chown -R www-data:www-data $HUBZILLA_PATH
    fi
}

function backup_local_hubzilla {
    hubzilla_path=/var/www/${HUBZILLA_DOMAIN_NAME}/htdocs
    if [ -d $hubzilla_path ]; then
        function_check backup_database_to_usb
        backup_database_to_usb hubzilla

        backup_directory_to_usb $hubzilla_path hubzilla
    fi
}

function restore_local_hubzilla {
    temp_restore_dir=/root/temphubzilla
    hubzilla_dir=/var/www/${HUBZILLA_DOMAIN_NAME}/htdocs

    function_check hubzilla_create_database
    hubzilla_create_database

    restore_database hubzilla ${HUBZILLA_DOMAIN_NAME}
    if [ -d $USB_MOUNT/backup/hubzilla ]; then
        if [ ! -d $hubzilla_dir/store/[data]/smarty3 ]; then
            mkdir -p $hubzilla_dir/store/[data]/smarty3
        fi
        chmod 1777 $hubzilla_dir/store/[data]/smarty3
        chown -R www-data:www-data $hubzilla_dir/*
        if [ -d $temp_restore_dir ]; then
            rm -rf $temp_restore_dir
        fi

        MARIADB_PASSWORD=$(${PROJECT_NAME}-pass -u root -a mariadb)
        HUBZILLA_PATH=/var/www/$HUBZILLA_DOMAIN_NAME/htdocs
        sed -i "s|\$db_pass =.*|\$db_pass = '${MARIADB_PASSWORD}';|g" $HUBZILLA_PATH/.htconfig.php
        MARIADB_PASSWORD=
    fi
}

function backup_remote_hubzilla {
    temp_backup_dir=/var/www/${HUBZILLA_DOMAIN_NAME}/htdocs
    if [ -d $temp_backup_dir ]; then
        suspend_site ${HUBZILLA_DOMAIN_NAME}
        backup_database_to_friend hubzilla
        echo "Backing up Hubzilla installation"
        backup_directory_to_friend $temp_backup_dir hubzilla
        restart_site
        echo "Backup of Hubzilla complete"
    else
        echo $"Hubzilla domain specified but not found in /var/www/${HUBZILLA_DOMAIN_NAME}"
        exit 2578
    fi
}

function restore_remote_hubzilla {
    function_check restore_database_from_friend

    function_check hubzilla_create_database
    hubzilla_create_database

    restore_database_from_friend hubzilla ${HUBZILLA_DOMAIN_NAME}
    if [ -d $SERVER_DIRECTORY/backup/hubzilla ]; then
        if [ ! -d /var/www/${HUBZILLA_DOMAIN_NAME}/htdocs/store/[data]/smarty3 ]; then
            mkdir -p /var/www/${HUBZILLA_DOMAIN_NAME}/htdocs/store/[data]/smarty3
        fi
        chmod 1777 /var/www/${HUBZILLA_DOMAIN_NAME}/htdocs/store/[data]/smarty3
        chown -R www-data:www-data /var/www/${HUBZILLA_DOMAIN_NAME}/htdocs/*
    fi
    if [ -d /root/temphubzilla ]; then
        rm -rf /root/temphubzilla
    fi

    MARIADB_PASSWORD=$(${PROJECT_NAME}-pass -u root -a mariadb)
    HUBZILLA_PATH=/var/www/$HUBZILLA_DOMAIN_NAME/htdocs
    sed -i "s|\$db_pass =.*|\$db_pass = '${MARIADB_PASSWORD}';|g" $HUBZILLA_PATH/.htconfig.php
    MARIADB_PASSWORD=
}

function remove_hubzilla {
    if [ ${#HUBZILLA_DOMAIN_NAME} -eq 0 ]; then
        return
    fi
    nginx_dissite $HUBZILLA_DOMAIN_NAME
    remove_certs ${HUBZILLA_DOMAIN_NAME}
    if [ -d /var/www/$HUBZILLA_DOMAIN_NAME ]; then
        rm -rf /var/www/$HUBZILLA_DOMAIN_NAME
    fi
    if [ -f /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME ]; then
        rm /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
    fi
    function_check drop_database
    drop_database hubzilla
    function_check remove_onion_service
    remove_onion_service hubzilla ${HUBZILLA_ONION_PORT}
    sed -i '/hubzilla/d' $COMPLETION_FILE
    sed -i '/poller.php/d' /etc/crontab

    function_check remove_ddns_domain
    remove_ddns_domain $HUBZILLA_DOMAIN_NAME
}

function install_hubzilla {
    if [ ! $HUBZILLA_DOMAIN_NAME ]; then
        return
    fi

    if [[ $ONION_ONLY != "no" ]]; then
        echo $"Hubzilla won't work on an onion address"
        exit 529925
    fi

    HUBZILLA_PATH=/var/www/$HUBZILLA_DOMAIN_NAME/htdocs

    function_check install_mariadb
    install_mariadb

    if [ -d /var/www/$HUBZILLA_DOMAIN_NAME ]; then
        remove_hubzilla
    fi

    function_check get_mariadb_password
    get_mariadb_password

    function_check repair_databases_script
    repair_databases_script

    apt-get -yq install php-common php-cli php-curl php-gd php-mysql php-mcrypt git
    apt-get -yq install php-dev imagemagick php-imagick libfcgi0ldbl
    apt-get -yq install php-memcached memcached

    if [ ! -d /var/www/$HUBZILLA_DOMAIN_NAME ]; then
        mkdir /var/www/$HUBZILLA_DOMAIN_NAME
    fi
    if [ ! -d $HUBZILLA_PATH ]; then
        mkdir $HUBZILLA_PATH
    fi

    if [ ! -f $HUBZILLA_PATH/index.php ]; then
        cd $INSTALL_DIR

        if [ -d /repos/hubzilla ]; then
            mkdir hubzilla
            cp -r -p /repos/hubzilla/. hubzilla
            cd hubzilla
            git pull
        else
            function_check git_clone
            git_clone $HUBZILLA_REPO hubzilla
        fi

        git checkout $HUBZILLA_COMMIT -b $HUBZILLA_COMMIT
        set_completion_param "hubzilla commit" "$HUBZILLA_COMMIT"

        rm -rf $HUBZILLA_PATH
        mv hubzilla $HUBZILLA_PATH

        if [ -d /repos/hubzilla-addons ]; then
            mkdir $HUBZILLA_PATH/addon
            cp -r -p /repos/hubzilla-addons/. $HUBZILLA_PATH/addon
            cd $HUBZILLA_PATH/addon
            git pull
        else
            git_clone $HUBZILLA_ADDONS_REPO $HUBZILLA_PATH/addon
        fi

        cd $HUBZILLA_PATH/addon
        git checkout $HUBZILLA_ADDONS_COMMIT -b $HUBZILLA_ADDONS_COMMIT
        set_completion_param "hubzilla addons commit" "$HUBZILLA_ADDONS_COMMIT"

        chown -R www-data:www-data $HUBZILLA_PATH
    fi

    HUBZILLA_ONION_HOSTNAME=
    if [[ $ONION_ONLY != "no" ]]; then
        HUBZILLA_ONION_HOSTNAME=$(add_onion_service hubzilla 80 ${HUBZILLA_ONION_PORT})
    fi

    hubzilla_create_database

    if ! grep -q "$HUBZILLA_PATH" /etc/crontab; then
        echo "12,22,32,42,52 * *   *   *   root cd $HUBZILLA_PATH; /usr/bin/timeout 500 /usr/bin/php include/poller.php" >> /etc/crontab
    fi

    function_check add_ddns_domain
    add_ddns_domain $HUBZILLA_DOMAIN_NAME

    if [[ $ONION_ONLY == "no" ]]; then
        function_check nginx_http_redirect
        nginx_http_redirect $HUBZILLA_DOMAIN_NAME
        echo 'server {' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    listen 443 ssl;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    listen [::]:443 ssl;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo "    root $HUBZILLA_PATH;" >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo "    server_name $HUBZILLA_DOMAIN_NAME;" >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo "    error_log /dev/null;" >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    index index.php;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    charset utf-8;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    access_log /dev/null;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        function_check nginx_ssl
        nginx_ssl $HUBZILLA_DOMAIN_NAME
        function_check nginx_disable_sniffing
        nginx_disable_sniffing $HUBZILLA_DOMAIN_NAME
        echo '    add_header Strict-Transport-Security max-age=15768000;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    # rewrite to front controller as default rule' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    location / {' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        function_check nginx_limits
        nginx_limits $HUBZILLA_DOMAIN_NAME
        echo '        rewrite ^/(.*) /index.php?q=$uri&$args last;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    }' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    # statically serve these file types when possible' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    # otherwise fall back to front controller' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    # allow browser to cache them' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    # added .htm for advanced source code editor library' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    location ~* \.(jpg|jpeg|gif|png|ico|css|js|htm|html|ttf|woff|svg)$ {' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        expires 30d;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        try_files $uri /index.php?q=$uri&$args;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    }' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    # block these file types' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    location ~* \.(tpl|md|tgz|log|out)$ {' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        deny all;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    }' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    # or a unix socket' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    location ~* \.php$ {' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        function_check nginx_limits
        nginx_limits $HUBZILLA_DOMAIN_NAME
        echo '        # Zero-day exploit defense.' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        # http://forum.nginx.org/read.php?2,88845,page=3' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo "        # Won't work properly (404 error) if the file is not stored on this" >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo "        # server, which is entirely possible with php-fpm/php-fcgi." >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo "        # Comment the 'try_files' line out if you set up php-fpm/php-fcgi on" >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo "        # another machine. And then cross your fingers that you won't get hacked." >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        try_files $uri $uri/ /index.php;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        fastcgi_split_path_info ^(.+\.php)(/.+)$;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        # With php-cgi alone:' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        # fastcgi_pass 127.0.0.1:9000;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        # With php-fpm:' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        include fastcgi_params;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        fastcgi_read_timeout 30;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        fastcgi_index index.php;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        fastcgi_read_timeout 300;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    }' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    # deny access to all dot files' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    location ~ /\. {' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        deny all;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    }' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    location ~ /\.ht {' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '      deny  all;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    }' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '}' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
    else
        echo 'server {' > /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo "    listen 127.0.0.1:${HUBZILLA_ONION_PORT} default_server;" >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo "    root $HUBZILLA_PATH;" >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo "    server_name $HUBZILLA_ONION_HOSTNAME;" >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo "    error_log /dev/null;" >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    index index.php;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    charset utf-8;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    access_log /dev/null;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    add_header Strict-Transport-Security max-age=15768000;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    # rewrite to front controller as default rule' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    location / {' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        nginx_limits $HUBZILLA_DOMAIN_NAME
        nginx_disable_sniffing $HUBZILLA_DOMAIN_NAME
        echo '        rewrite ^/(.*) /index.php?q=$uri&$args last;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    }' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    # statically serve these file types when possible' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    # otherwise fall back to front controller' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    # allow browser to cache them' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    # added .htm for advanced source code editor library' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    location ~* \.(jpg|jpeg|gif|png|ico|css|js|htm|html|ttf|woff|svg)$ {' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        expires 30d;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        try_files $uri /index.php?q=$uri&$args;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    }' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    # block these file types' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    location ~* \.(tpl|md|tgz|log|out)$ {' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        deny all;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    }' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    # or a unix socket' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    location ~* \.php$ {' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        nginx_limits $HUBZILLA_DOMAIN_NAME
        nginx_disable_sniffing $HUBZILLA_DOMAIN_NAME
        echo '        # Zero-day exploit defense.' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        # http://forum.nginx.org/read.php?2,88845,page=3' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo "        # Won't work properly (404 error) if the file is not stored on this" >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo "        # server, which is entirely possible with php-fpm/php-fcgi." >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo "        # Comment the 'try_files' line out if you set up php-fpm/php-fcgi on" >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo "        # another machine. And then cross your fingers that you won't get hacked." >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        try_files $uri $uri/ /index.php;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        fastcgi_split_path_info ^(.+\.php)(/.+)$;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        # With php-cgi alone:' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        # fastcgi_pass 127.0.0.1:9000;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        # With php-fpm:' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        include fastcgi_params;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        fastcgi_read_timeout 30;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        fastcgi_index index.php;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        fastcgi_read_timeout 300;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    }' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    # deny access to all dot files' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    location ~ /\. {' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '        deny all;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    }' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    location ~ /\.ht {' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '      deny  all;' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '    }' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
        echo '}' >> /etc/nginx/sites-available/$HUBZILLA_DOMAIN_NAME
    fi

    function_check configure_php
    configure_php

    function_check create_site_certificate
    create_site_certificate $HUBZILLA_DOMAIN_NAME 'yes'

    if [ ! -d $HUBZILLA_PATH/view/tpl/smarty3 ]; then
        mkdir $HUBZILLA_PATH/view/tpl/smarty3
    fi
    if [ ! -d "$HUBZILLA_PATH/store" ]; then
        mkdir "$HUBZILLA_PATH/store"
    fi
    if [ ! -d "$HUBZILLA_PATH/store/[data]" ]; then
        mkdir "$HUBZILLA_PATH/store/[data]"
    fi
    if [ ! -d "$HUBZILLA_PATH/store/[data]/smarty3" ]; then
        mkdir "$HUBZILLA_PATH/store/[data]/smarty3"
        chmod 1777 "$HUBZILLA_PATH/store/[data]/smarty3"
    fi
    chmod 1777 $HUBZILLA_PATH/view/tpl
    chown -R www-data:www-data "$HUBZILLA_PATH/store"
    chmod 1777 $HUBZILLA_PATH/view/tpl/smarty3

    # Ensure that the database gets backed up locally, if remote
    # backups are not being used
    function_check backup_databases_script_header
    backup_databases_script_header

    function_check backup_database_local
    backup_database_local hubzilla

    chown -R www-data:www-data $HUBZILLA_PATH

    function_check nginx_ensite
    nginx_ensite $HUBZILLA_DOMAIN_NAME

    # initialize the database
    if [ ! -f $HUBZILLA_PATH/install/schema_mysql.sql ]; then
        echo $'No database schema found for hubzilla'
        exit 252782
    fi
    function_check initialise_database
    initialise_database hubzilla $HUBZILLA_PATH/install/schema_mysql.sql

    # create the config file
    echo '<?php' > $HUBZILLA_PATH/.htconfig.php
    echo "\$db_host = 'localhost';" >> $HUBZILLA_PATH/.htconfig.php
    echo "\$db_port = '0';" >> $HUBZILLA_PATH/.htconfig.php
    echo "\$db_user = 'root';" >> $HUBZILLA_PATH/.htconfig.php
    echo "\$db_pass = '${MARIADB_PASSWORD}';" >> $HUBZILLA_PATH/.htconfig.php
    echo "\$db_data = 'hubzilla';" >> $HUBZILLA_PATH/.htconfig.php
    echo "\$db_type = '0';" >> $HUBZILLA_PATH/.htconfig.php
    echo "\$default_timezone = 'Europe/London';" >> $HUBZILLA_PATH/.htconfig.php
    if [[ $ONION_ONLY == 'no' ]]; then
        echo "\$a->config['system']['baseurl'] = 'https://${HUBZILLA_DOMAIN_NAME}';" >> $HUBZILLA_PATH/.htconfig.php
    else
        echo "\$a->config['system']['baseurl'] = 'http://${HUBZILLA_ONION_HOSTNAME}';" >> $HUBZILLA_PATH/.htconfig.php
    fi
    echo "\$a->config['system']['sitename'] = \"Hubzilla\";" >> $HUBZILLA_PATH/.htconfig.php
    HUBZILLA_LOCATION_HASH="$(create_password 30)"
    echo "\$a->config['system']['location_hash'] = '${HUBZILLA_LOCATION_HASH}';" >> $HUBZILLA_PATH/.htconfig.php
    echo "\$a->config['system']['register_policy'] = REGISTER_OPEN;" >> $HUBZILLA_PATH/.htconfig.php
    echo "\$a->config['system']['register_text'] = '';" >> $HUBZILLA_PATH/.htconfig.php
    echo "\$a->config['system']['admin_email'] = '${MY_EMAIL_ADDRESS}';" >> $HUBZILLA_PATH/.htconfig.php
    echo "\$a->config['system']['verify_email'] = 1;" >> $HUBZILLA_PATH/.htconfig.php
    echo "\$a->config['system']['access_policy'] = ACCESS_PRIVATE;" >> $HUBZILLA_PATH/.htconfig.php
    echo "\$a->config['system']['sellpage'] = '';" >> $HUBZILLA_PATH/.htconfig.php
    echo "\$a->config['system']['max_import_size'] = 200000;" >> $HUBZILLA_PATH/.htconfig.php
    echo "\$a->config['system']['php_path'] = '/usr/bin/php';" >> $HUBZILLA_PATH/.htconfig.php
    echo "\$a->config['system']['directory_mode']  = DIRECTORY_MODE_NORMAL;" >> $HUBZILLA_PATH/.htconfig.php
    echo "\$a->config['system']['theme'] = 'redbasic';" >> $HUBZILLA_PATH/.htconfig.php
    chown www-data:www-data $HUBZILLA_PATH/.htconfig.php
    chmod 755 $HUBZILLA_PATH/.htconfig.php

    systemctl restart mariadb
    systemctl restart php7.0-fpm
    systemctl restart nginx
    systemctl restart cron

    ${PROJECT_NAME}-addemail -u $MY_USERNAME -e "noreply@$HUBZILLA_DOMAIN_NAME" -g hubzilla --public no

    set_completion_param "hubzilla domain" "${HUBZILLA_DOMAIN_NAME}"
    APP_INSTALLED=1
}

# NOTE: deliberately there is no "exit 0"
