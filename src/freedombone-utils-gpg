#!/bin/bash
#
# .---.                  .              .
# |                      |              |
# |--- .--. .-.  .-.  .-.|  .-. .--.--. |.-.  .-. .--.  .-.
# |    |   (.-' (.-' (   | (   )|  |  | |   )(   )|  | (.-'
# '    '     --'  --'  -' -  -' '  '   -' -'   -' '   -  --'
#
#                    Freedom in the Cloud
#
# gpg functions
#
# License
# =======
#
# Copyright (C) 2016 Bob Mottram <bob@freedombone.net>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

function gpg_allow_tty {
    gpg_username=$1

    if [[ $gpg_username == 'root' ]]; then
        if ! grep -q 'GPG_TTY' /root/.bashrc; then
            echo '' >> /root/.bashrc
            echo 'GPG_TTY=$(tty)' >> /root/.bashrc
            echo 'export GPG_TTY' >> /root/.bashrc
        fi
    else
        if ! grep -q 'GPG_TTY' /home/$gpg_username/.bashrc; then
            echo '' >> /home/$gpg_username/.bashrc
            echo 'GPG_TTY=$(tty)' >> /home/$gpg_username/.bashrc
            echo 'export GPG_TTY' >> /home/$gpg_username/.bashrc
            chown $gpg_username:$gpg_username /home/$gpg_username/.bashrc
        fi
    fi
}

function gpg_pubkey_from_email {
    key_owner_username=$1
    key_email_address=$2
    key_id=
    if [[ $key_owner_username != "root" ]]; then
        key_id=$(su -c "gpg --list-keys $key_email_address" - $key_owner_username | sed -n '2p' | sed 's/^[ \t]*//')
    else
        key_id=$(gpg --list-keys $key_email_address | sed -n '2p' | sed 's/^[ \t]*//')
    fi
    echo $key_id
}

function enable_email_encryption_at_rest {
    for d in /home/*/ ; do
        USERNAME=$(echo "$d" | awk -F '/' '{print $3}')
        if [[ $(is_valid_user "$USERNAME") == "1" ]]; then
            if grep '#| /usr/bin/gpgit.pl' /home/$USERNAME/.procmailrc; then
                sed -i 's@#| /usr/bin/gpgit.pl@| /usr/bin/gpgit.pl@g' /home/$USERNAME/.procmailrc
                sed -i 's|#:0 f|:0 f|g' /home/$USERNAME/.procmailrc
            fi
        fi
    done

    if grep '#| /usr/bin/gpgit.pl' /etc/skel/.procmailrc; then
        sed -i 's@#| /usr/bin/gpgit.pl@| /usr/bin/gpgit.pl@g' /etc/skel/.procmailrc
        sed -i 's|#:0 f|:0 f|g' /etc/skel/.procmailrc
    fi
}

function disable_email_encryption_at_rest {
    for d in /home/*/ ; do
        USERNAME=$(echo "$d" | awk -F '/' '{print $3}')
        if [[ $(is_valid_user "$USERNAME") == "1" ]]; then
            if ! grep '#| /usr/bin/gpgit.pl' /home/$USERNAME/.procmailrc; then
                sed -i 's@| /usr/bin/gpgit.pl@#| /usr/bin/gpgit.pl@g' /home/$USERNAME/.procmailrc
                sed -i 's|:0 f|#:0 f|g' /home/$USERNAME/.procmailrc
            fi
        fi
    done

    if ! grep '#| /usr/bin/gpgit.pl' /etc/skel/.procmailrc; then
        sed -i 's@| /usr/bin/gpgit.pl@#| /usr/bin/gpgit.pl@g' /etc/skel/.procmailrc
        sed -i 's|:0 f|#:0 f|g' /etc/skel/.procmailrc
    fi
}

# NOTE: deliberately no exit 0
